{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/mac/Desktop/next/next-test/components/Automobile.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport axios from 'axios';\n\nvar Automobile = function Automobile(_ref) {\n  var list = _ref.list;\n  console.log({\n    list: list\n  });\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"auto_list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"images/lafa.jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"\\u62C9\\u6CD5\", __jsx(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"\\uFFE57000000\")), __jsx(\"div\", {\n    className: \"add_button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"subtraction\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"-\"), __jsx(\"div\", {\n    className: \"addnum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"0\"), __jsx(\"div\", {\n    className: \"addition\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"+\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, list), __jsx(\"button\", {\n    className: \"increase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"\\u52A0\\u5165\\u8D2D\\u7269\\u8F66\"))));\n};\n\nAutomobile.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var promise;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(11);\n          promise = new _Promise(function (resolve) {\n            axios('https://www.easy-mock.com/mock/5cfcce489dc7c36bd6da2c99/xiaojiejie/getList').then(function (res) {\n              console.log('远程数据结果：', res);\n              resolve(res.data.data);\n            });\n          });\n          _context.next = 4;\n          return promise;\n\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default withRouter(Automobile);","map":{"version":3,"sources":["/Users/mac/Desktop/next/next-test/components/Automobile.js"],"names":["withRouter","axios","Automobile","list","console","log","getInitialProps","promise","resolve","then","res","data"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAMC,UAAU,GAAE,SAAZA,UAAY,OAAU;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA,IAAI,EAAJA;AAAD,GAAZ;AACA,SACI,4BACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAM;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAN,CAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAII;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ,CADJ,EAUZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CAVY,EAWI;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAXJ,CAHJ,CADJ,CADJ;AAqBH,CAvBD;;AAwBAD,UAAU,CAACI,eAAX;AAAA;AAAA;AAAA;AAAA,yBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBF,UAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACME,UAAAA,OAFmB,GAEV,aAAY,UAACC,OAAD,EAAW;AAC9BP,YAAAA,KAAK,CAAC,4EAAD,CAAL,CAAoFQ,IAApF,CACI,UAACC,GAAD,EAAO;AACHN,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBK,GAAtB;AACAF,cAAAA,OAAO,CAACE,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAP;AACH,aAJL;AAMP,WAPc,CAFU;AAAA;AAAA,iBAUZJ,OAVY;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;AAYA,eAAeP,UAAU,CAACE,UAAD,CAAzB","sourcesContent":["import { withRouter} from 'next/router'\nimport axios from 'axios'\nconst Automobile =({list})=>{ \n    console.log({list})\n    return (\n        <>\n            <div className=\"auto_list\">\n                <img src=\"images/lafa.jpg\"/>\n                <h3>拉法<span className=\"price\">￥7000000</span></h3>\n                <div className=\"add_button\">\n                    <div className=\"control\">\n                        <div className=\"subtraction\">\n                            -\n                        </div>\n                        <div className=\"addnum\">0</div>\n                        <div className=\"addition\">\n                            +\n                        </div>\n                    </div>\n    <div>{list}</div>\n                    <button className=\"increase\">加入购物车</button>\n                </div>\n            </div>\n        </> \n    )\n}\nAutomobile.getInitialProps = async ()=>{\n    console.log(11)\n    const promise =new Promise((resolve)=>{\n            axios('https://www.easy-mock.com/mock/5cfcce489dc7c36bd6da2c99/xiaojiejie/getList').then(\n                (res)=>{\n                    console.log('远程数据结果：',res)\n                    resolve(res.data.data)\n                }\n            )\n    })\n    return await promise\n}\nexport default withRouter(Automobile)"]},"metadata":{},"sourceType":"module"}
{"version":3,"file":"static/webpack/static/development/pages/index.js.76857dea01cf6183a685.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Link from 'next/link'\nimport Router from 'next/router'\nimport '../public/less/reset.less'\nimport '../public/less/index.less'\nimport Nav from '../components/nav'\nimport Automobile from '../components/Automobile'\nimport { createStore } from 'redux';\nimport { Provider,connect} from \"react-redux\";\n \nimport getConfig from 'next/config'\nconst {publicRuntimeConfig} = getConfig()\n\n// 定义counter组件\nclass Counter extends Component {\n  getChildren = () => {\n    console.log(this.refs['children'].state.msg)\n  }\n  render() {\n    const { value, onIncreaseClick } = this.props\n    return (\n      <>\n        <Nav {...this.props}/>\n        <div className=\"indexpage\"> \n            <div className=\"jackma\">\n                <div className=\"header_img\"></div>\n                <h3>马云模拟器</h3>\n                <div className=\"balance\">\n                    <button className=\"balance_baby\">把钱存余额宝</button>\n                    <span>每秒收益：200元</span>\n                </div>\n            </div>\n            <div className=\"mall\">\n                <ul>\n                  <li>商城：</li>\n                  <li className=\"li_on\">\n                    汽车\n                  </li>\n                  <li>房产</li>\n                  <li>零碎</li>\n                </ul>\n            </div>\n            <Automobile ref=\"children\" {...this.props}/>\n        </div>\n      </>\n    )\n  }\n}\n\n/*-----------具体通知描述及数据处理方法部分-------------*/\n// Action通知及描述\nconst increaseAction = { type: 'reduce' }\n// Reducer计算  基于原有state根据action得到新的state\nfunction counter(state = { count: 279000000000,reduce:0}, action) {\n  const count = state.count;\n\n  switch (action.type) {\n    case 'reduce'://如果接到action为increase的通知执行\n      return { count: count - 1}\n    default:\n      return state//返回新的state\n  }\n}\n\n/*-----------数据存储器部分-------------*/\n// 根据reducer函数通过createStore()创建store(存储器)\nconst store = createStore(counter)\n\n/*-----------映射方法及数据部分-------------*/\n//  将state映射到Counter组件的props(数据)\nfunction mapStateToProps(state) {\n  return {\n    value: state.count\n  }\n}\n//  将action映射到Counter组件的props(方法)\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onIncreaseClick: function (ceshi) {\n      console.log(ceshi)\n      dispatch(increaseAction)//定义点击方法发送action\n      console.log(dispatch(increaseAction))\n    }\n  }\n}\n// 传入上面两个函数参数，将Counter组件变为App组件\nconst App = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter)\n\nconst Home = () => {\n  return(\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  )\n}\nexport default Home"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAhCA;AAmCA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AADA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AALA;AAOA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;A","sourceRoot":""}